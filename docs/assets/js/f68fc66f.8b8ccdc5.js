"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[274],{9597:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>t,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var s=n(4848),o=n(8453);const a={sidebar_position:2},t="Provider",i={id:"step-by-step-guide/provider",title:"Provider",description:"What is a Provider?",source:"@site/docs/step-by-step-guide/provider.md",sourceDirName:"step-by-step-guide",slug:"/step-by-step-guide/provider",permalink:"/gatekeeper/docs/step-by-step-guide/provider",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/gatekeeper/docs/step-by-step-guide/getting-started"},next:{title:"Registering Providers",permalink:"/gatekeeper/docs/step-by-step-guide/registering-providers"}},l={},d=[{value:"What is a Provider?",id:"what-is-a-provider",level:2},{value:"Options",id:"options",level:3},{value:"Example #1",id:"example-1",level:4},{value:"Example #2",id:"example-2",level:4},{value:"Handler",id:"handler",level:3},{value:"Example #1",id:"example-1-1",level:4},{value:"Example #2",id:"example-2-1",level:4},{value:"What happens if I cannot return a user?",id:"what-happens-if-i-cannot-return-a-user",level:3},{value:"Example #1 -- Predefined errors",id:"example-1----predefined-errors",level:4},{value:"Example #2",id:"example-2-2",level:4},{value:"Error handler (optional)",id:"error-handler-optional",level:3},{value:"Example #1",id:"example-1-2",level:4},{value:"Example #2",id:"example-2-3",level:4},{value:"More Examples",id:"more-examples",level:3}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"provider",children:"Provider"}),"\n",(0,s.jsx)(r.h2,{id:"what-is-a-provider",children:"What is a Provider?"}),"\n",(0,s.jsx)(r.p,{children:"Providers are an essential part of Gatekeeper. They abstract the complexities involved in managing authentication (such as handling tokens, callbacks, etc.) and offer a clean, easy-to-use way to authenticate users."}),"\n",(0,s.jsx)(r.p,{children:"Providers accept three parameters:"}),"\n",(0,s.jsx)(r.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(r.p,{children:"Allow you to pass additional data for a Provider to work, or to customize it to your needs. Each provider has its own options, so be sure to check out our Providers page and look for the providers you want to implement."}),"\n",(0,s.jsx)(r.h4,{id:"example-1",children:"Example #1"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport GoogleProvider from '@sharifvelasquesz/gatekeeper/providers/google';\r\n\r\ngatekeeper.registerProvider(new GoogleProvider({\r\n    clientId: '<GOOGLE CLIENT ID>',\r\n    clientSecret: '<GOOGLE CLIENT SECRET>',\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.example.com/auth/google'\r\n}, handler, errorHandler));\n"})}),"\n",(0,s.jsx)(r.h4,{id:"example-2",children:"Example #2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport GithubProvider from '@sharifvelasquesz/gatekeeper/providers/github';\r\n\r\ngatekeeper.registerProvider(new GithubProvider({\r\n    clientId: '<GITHUB CLIENT ID>',\r\n    clientSecret: '<GITHUB CLIENT SECRET>',\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.example.com/auth/google',\r\n\r\n    scope: ['user', 'repo', 'project']\r\n}, handler, errorHandler));\n"})}),"\n",(0,s.jsx)(r.h3,{id:"handler",children:"Handler"}),"\n",(0,s.jsxs)(r.p,{children:["A provider processes a user's request to obtain data that is then passed to ",(0,s.jsx)(r.strong,{children:"the handler"}),", which is responsible for utilizing this data to generate and return a user object. This user object is then stored in the session (in ",(0,s.jsx)(r.code,{children:"req.session.user"}),")."]}),"\n",(0,s.jsx)(r.h4,{id:"example-1-1",children:"Example #1"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport GoogleProvider from '@sharifvelasquez/gatekeeper/providers/google';\r\n\r\ngatekeeper.registerProvider(new GoogleProvider(options, (access_token, profile) => {\r\n    /*\r\n    For example, you can use the Google user's id (that is inside\r\n    the `profile` variable provided by the Google Provider) to get\r\n    the user from your database\r\n    */\r\n    const user = User.findOne({ externalServiceId: profile.id });\r\n\r\n    return user;\r\n}));\n"})}),"\n",(0,s.jsx)(r.h4,{id:"example-2-1",children:"Example #2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport GithubProvider from '@sharifvelasquez/gatekeeper/providers/github';\r\n\r\ngatekeeper.registerProvider(new GithubProvider(options, (access_token, profile) => {\r\n    const user = User.findOne({ id: profile.id });\r\n    /*\r\n    The handler must ALWAYS return something that will be saved\r\n    as the user inside req.session.user\r\n    */\r\n    return { id: user.id, createdByProvider: 'github', someProperty: 123 };\r\n}));\n"})}),"\n",(0,s.jsx)(r.h3,{id:"what-happens-if-i-cannot-return-a-user",children:"What happens if I cannot return a user?"}),"\n",(0,s.jsxs)(r.p,{children:["Maybe the user that is trying to log in doesn't exist, or perhaps its credentials are invalid. Whatever the reason is, you may not always be able to retrieve a user. In these cases, you can throw an error that can later be handled by the ",(0,s.jsx)(r.a,{href:"#error-handler-optional",children:"error handler"})," (we'll look at that in a moment). Most providers have predefined errors you can use, but you can also create your own."]}),"\n",(0,s.jsx)(r.h4,{id:"example-1----predefined-errors",children:"Example #1 -- Predefined errors"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport LocalProvider, { IncorrectCredentials } from '@sharifvelasquez/gatekeeper/providers/local'\r\n\r\ngatekeeper.registerProvider(new LocalProvider(options, (username, password) => {\r\n    const user = User.findOne({ username, password });\r\n    if (user.password !== password) {\r\n        throw new IncorrectCredentials();\r\n    }\r\n    return user;\r\n}, errorHandler));\n"})}),"\n",(0,s.jsx)(r.p,{children:"Or, as mentioned before, you can also define your own custom errors:"}),"\n",(0,s.jsx)(r.h4,{id:"example-2-2",children:"Example #2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from 'gatekeeper';\r\nimport LocalProvider, { IncorrectCredentials } from '@sharifvelasquez/gatekeeper/providers/local'\r\n\r\nclass BannedUser extends Error {\r\n    constructor(message = '') {\r\n        super(message);\r\n    }\r\n}\r\n\r\ngatekeeper.registerProvider(new LocalProvider(options, (username, password) => {\r\n    const user = User.findOne({ username, password });\r\n\r\n    if (user.username == 'Mr.Angry') {\r\n        throw new BannedUser();\r\n    }\r\n\r\n    return user;\r\n}, errorHandler));\n"})}),"\n",(0,s.jsx)(r.p,{children:"This way unexpected/incorrect behavior becomes clearer and predictable."}),"\n",(0,s.jsx)(r.h3,{id:"error-handler-optional",children:"Error handler (optional)"}),"\n",(0,s.jsx)(r.p,{children:"The error handler allows you to manage and handle the errors that might be thrown during the execution of the handler (in case you don't specify one, Gatekeeper will pass the errors on to Express)."}),"\n",(0,s.jsx)(r.h4,{id:"example-1-2",children:"Example #1"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from 'gatekeeper';\r\nimport LocalProvider, { IncorrectCredentials } from '@sharifvelasquez/gatekeeper/providers/local'\r\n\r\nclass BannedUser extends Error {\r\n    constructor(message = '') {\r\n        super(message);\r\n    }\r\n}\r\n\r\ngatekeeper.registerProvider(new LocalProvider(options, (username, password) => {\r\n    const user = User.findOne({ username, password });\r\n\r\n    if (user.username == 'Mr.Angry') {\r\n        throw new BannedUser();\r\n    }\r\n\r\n    return user;\r\n}, (error, req, res, next) => {\r\n    if (error instanceof BannedUser)\r\n        res.redirect('/bannedusers');\r\n\r\n    if (error instanceof Error)\r\n        res.send('There was an error while trying to log in').status(500);\r\n    /*\r\n    Don't forget to call the `next` function in case this is an error we\r\n    cannot/don't want to handle, as it will pass the error on to Express.\r\n    Doing this is heavily recommended\r\n    */\r\n    next(error);\r\n}));\n"})}),"\n",(0,s.jsx)(r.p,{children:"And here is another example:"}),"\n",(0,s.jsx)(r.h4,{id:"example-2-3",children:"Example #2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import gatekeeper from 'gatekeeper';\r\nimport LocalProvider, { IncorrectCredentials } from '@sharifvelasquez/gatekeeper/providers/local'\r\n\r\nclass BannedUser extends Error {\r\n    constructor(message = '') {\r\n        super(message);\r\n    }\r\n}\r\n\r\ngatekeeper.registerProvider(new LocalProvider(options, (username, password) => {\r\n    const user = User.findOne({ username, password });\r\n\r\n    if (user.username == 'Mr.Angry')\r\n        throw new BannedUser();\r\n\r\n    return user;\r\n}, (error, req, res, next) => {\r\n    if (error instanceof IncorrectCredentials)\r\n        return res.json({ message: 'Your credentials are incorrect', success: false });\r\n\r\n    if (error instanceof BannedUser)\r\n\treturn res.redirect('/bannedusers');\r\n\r\n    next(error);\r\n}));\n"})}),"\n",(0,s.jsx)(r.h3,{id:"more-examples",children:"More Examples"}),"\n",(0,s.jsxs)(r.p,{children:["After you learn how to ",(0,s.jsx)(r.a,{href:"./registering-providers",children:"register providers"}),", we recommend you visit the ",(0,s.jsx)(r.a,{href:"../providers/local",children:"Local Provider"})," example or the ",(0,s.jsx)(r.a,{href:"../providers/google",children:"Google Provider"})," example, or you can visit the ",(0,s.jsx)(r.a,{href:"../providers",children:"Providers"})," page to see how to implement your favorite providers."]}),"\n",(0,s.jsx)(r.p,{children:"Now that we know what a provider is, we will start registering them for use in the next section."})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>i});var s=n(6540);const o={},a=s.createContext(o);function t(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);