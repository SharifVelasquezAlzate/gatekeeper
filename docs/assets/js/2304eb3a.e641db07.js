"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[999],{2302:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var s=r(4848),t=r(8453);const n={sidebar_position:1},a="Getting Started",l={id:"step-by-step-guide/getting-started",title:"Getting Started",description:"Installation",source:"@site/docs/step-by-step-guide/getting-started.md",sourceDirName:"step-by-step-guide",slug:"/step-by-step-guide/getting-started",permalink:"/gatekeeper/docs/step-by-step-guide/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Step-by-step Guide",permalink:"/gatekeeper/docs/category/step-by-step-guide"},next:{title:"Provider",permalink:"/gatekeeper/docs/step-by-step-guide/provider"}},o={},d=[{value:"Installation",id:"installation",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Initializing your session module",id:"initializing-your-session-module",level:3},{value:"Initializing Gatekeeper",id:"initializing-gatekeeper",level:3},{value:"But... What is a User Serializer?",id:"but-what-is-a-user-serializer",level:4},{value:"Example",id:"example",level:4},{value:"User Deserealizer",id:"user-deserealizer",level:4},{value:"Example",id:"example-1",level:4}];function u(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-console",children:"npm install @sharifvelasquez/gatekeeper\n"})}),"\n",(0,s.jsx)(i.h2,{id:"initialization",children:"Initialization"}),"\n",(0,s.jsx)(i.h3,{id:"initializing-your-session-module",children:"Initializing your session module"}),"\n",(0,s.jsxs)(i.p,{children:["Gatekeeper uses sessions to store the user data, thus, it is very important that you initialize the session module of your preference before initializing Gatekeeper. Throughout this documentation we will be using ",(0,s.jsx)(i.code,{children:"express-session"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["In case you are using ",(0,s.jsx)(i.code,{children:"express-session"}),", these are our recommended settings:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:"app.use(session({\r\n    secret: '<YOUR SESSION SECRET>',\r\n    resave: true,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n        secure: false,  // if true only transmit cookie over https\r\n\thttpOnly: false, // if true prevent client side JS from reading the cookie\r\n        maxAge: 1000 * 60 * 10, // session max age in millisecond\r\n    },\r\n}));\n"})}),"\n",(0,s.jsx)(i.h3,{id:"initializing-gatekeeper",children:"Initializing Gatekeeper"}),"\n",(0,s.jsxs)(i.p,{children:["To initialize Gatekeeper you just have to pass ",(0,s.jsx)(i.code,{children:"gatekeeper.initialize({ userSerializer, userDeserializer })"})," as an express middleware (make sure to do it after you initialize your session module). Let's see an example:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport express from 'express';\r\nimport session from 'express-session';\r\n\r\nconst app = express();\r\n\r\napp.use(session({\r\n    secret: 'I love Grothendieck Universes!'\r\n}));\r\n\r\napp.use(gatekeeper.initialize({\r\n    userSerializer: (user) => user.id,\r\n    userDeserializer: (id) => {\r\n        /* Here we are returning an arbitrary user\r\n        for the sake of the example */\r\n        return { id: id, username: 'David Hilbert' };\r\n    }\r\n}));\n"})}),"\n",(0,s.jsx)(i.p,{children:"And with this, Gatekeeper is already initialized! Nonetheless, as you saw, we had to pass an object with two properties: userSerializer and userDeserealizer."}),"\n",(0,s.jsx)(i.h4,{id:"but-what-is-a-user-serializer",children:"But... What is a User Serializer?"}),"\n",(0,s.jsx)(i.p,{children:"A user serializer is a function that accepts a user object and returns a key that should be stored in the session. The key will then be used by the User Deserealizer to retrieve the user."}),"\n",(0,s.jsx)(i.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:"function userSerializer(user) {\r\n    /* For example, the user's id will allow us to\r\n    retrieve the user later when the user deserializer\r\n    gets called internally by gatekeeper */\r\n    return user.id;\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"user-deserealizer",children:"User Deserealizer"}),"\n",(0,s.jsx)(i.p,{children:"A user deserealizer is a function that accepts a key and returns a user object."}),"\n",(0,s.jsx)(i.h4,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:"function userDeserializer(key) {\r\n    /* Use the key (in this particular case, the user id)\r\n    to retrieve the user */\r\n    const user = User.findOne({ id: key });\r\n    return user;\r\n}\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Now that Gatekeeper is initialized, we can start learning about, and implementing, the concept of ",(0,s.jsx)(i.a,{href:"/gatekeeper/docs/step-by-step-guide/provider",children:"Provider"})]})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>a,x:()=>l});var s=r(6540);const t={},n=s.createContext(t);function a(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);