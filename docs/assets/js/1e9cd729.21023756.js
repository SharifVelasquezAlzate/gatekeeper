"use strict";(self.webpackChunkgatekeeper_docs=self.webpackChunkgatekeeper_docs||[]).push([[937],{5077:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=r(4848),n=r(8453);const i={sidebar_position:6},o="How to set up your client",a={id:"other-topics/setting-up-client",title:"How to set up your client",description:"Remember to set up your session middleware",source:"@site/docs/other-topics/setting-up-client.md",sourceDirName:"other-topics",slug:"/other-topics/setting-up-client",permalink:"/gatekeeper/docs/other-topics/setting-up-client",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"mainSidebar",previous:{title:"Discord",permalink:"/gatekeeper/docs/providers/discord"},next:{title:"Setting the User type",permalink:"/gatekeeper/docs/other-topics/typescript/setting-the-user-type"}},c={},d=[{value:"Remember to set up your session middleware",id:"remember-to-set-up-your-session-middleware",level:2},{value:"Set the <code>credentials</code> attribute in your requests",id:"set-the-credentials-attribute-in-your-requests",level:2},{value:"Fetch API",id:"fetch-api",level:3},{value:"Example",id:"example",level:4},{value:"Axios",id:"axios",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"how-to-set-up-your-client",children:"How to set up your client"}),"\n",(0,s.jsx)(t.h2,{id:"remember-to-set-up-your-session-middleware",children:"Remember to set up your session middleware"}),"\n",(0,s.jsxs)(t.p,{children:['Even though this is the "How to set up your client section", it is good to start with our recommended configuration for your server in case you are using express-session (if you don\'t know what we are talking about, go to our ',(0,s.jsx)(t.a,{href:"/docs/step-by-step-guide/getting-started",children:"Step-by-step Guide"}),"), which is the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"app.use(session({\r\n    secret: '<YOUR SESSION SECRET>',\r\n    resave: true,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n        secure: false,  // if true only transmit cookie over https\r\n\thttpOnly: false, // if true prevent client side JS from reading the cookie\r\n        maxAge: 1000 * 60 * 10, // session max age in millisecond\r\n    },\r\n    sameSite: 'lax' // or 'strict' if your client and server have the same origin url\r\n}));\n"})}),"\n",(0,s.jsxs)(t.h2,{id:"set-the-credentials-attribute-in-your-requests",children:["Set the ",(0,s.jsx)(t.code,{children:"credentials"})," attribute in your requests"]}),"\n",(0,s.jsxs)(t.p,{children:["Once your client has logged in, in order for each request to be authenticated, you need to set the ",(0,s.jsx)(t.code,{children:"credentials"})," (or ",(0,s.jsx)(t.code,{children:"withCredentials"})," if you are using ",(0,s.jsx)(t.code,{children:"axios"}),", or its equivalent in whatever requests module you are using) attribute to ",(0,s.jsx)(t.code,{children:"true"})," in each of your requests."]}),"\n",(0,s.jsx)(t.h3,{id:"fetch-api",children:"Fetch API"}),"\n",(0,s.jsxs)(t.p,{children:["If you are using javascript's native ",(0,s.jsx)(t.code,{children:"fetch"})," api, remember to set the ",(0,s.jsx)(t.code,{children:"credentials"})," attribute to ",(0,s.jsx)(t.code,{children:"true"})," each time you make a request:"]}),"\n",(0,s.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"fetch('https://URLToServer.example/protectedRoute', {\r\n    // SET THE credentials ATTRIBUTE TO true\r\n    credentials: true,\r\n\r\n    body: JSON.stringify({\r\n        someProperty: 'A normal request body... Nothing to see here...'\r\n    }),\r\n    headers: {\r\n        // ...\r\n    }\r\n})\n"})}),"\n",(0,s.jsx)(t.h3,{id:"axios",children:"Axios"}),"\n",(0,s.jsxs)(t.p,{children:["When using axios, make sure to set the ",(0,s.jsx)(t.code,{children:"withCredentials"})," attribute to ",(0,s.jsx)(t.code,{children:"true"}),", like this:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import axios from 'axios';\r\n\r\naxios.post('http://URLToServer.example/protectedRoute', yourRequestBody, {\r\n    withCredentials: true\r\n});\r\n\r\n// Or if using GET...\r\naxios.get('http://URLToServer.example/protectedRoute', {\r\n    withCredentials: true\r\n})\n"})}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsxs)(t.p,{children:["Just so that you don't have to write ",(0,s.jsx)(t.code,{children:"withCredentials: true"})," in all of your requests, we recommend you create an axios instance like this:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",metastring:'title="credentialsAxios.js"',children:"const credentialsAxios = axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default credentialsAxios;\n"})}),(0,s.jsx)(t.p,{children:"And use it whenever you want to make a request to the server:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import credentialsAxios from './credentialsAxios.js';\r\n\r\ncredentialsAxios.post('http://URLToServer.example/protectedRoute', yourRequestBody, {/* ... */});\n"})})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var s=r(6540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);