"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[801],{8246:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var i=t(4848),n=t(8453);const o={sidebar_position:3},s="Registering Providers",a={id:"step-by-step-guide/registering-providers",title:"Registering Providers",description:"Now that you know what a provider is and how to create them, it is time to let gatekeeper know about them so you can use them in your routes.",source:"@site/docs/step-by-step-guide/registering-providers.md",sourceDirName:"step-by-step-guide",slug:"/step-by-step-guide/registering-providers",permalink:"/gatekeeper/docs/step-by-step-guide/registering-providers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Provider",permalink:"/gatekeeper/docs/step-by-step-guide/provider"},next:{title:"Authenticating Users and Protecting Routes",permalink:"/gatekeeper/docs/step-by-step-guide/authenticating-users"}},c={},p=[{value:"Example",id:"example",level:4}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h4:"h4",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"registering-providers",children:"Registering Providers"}),"\n",(0,i.jsx)(r.p,{children:"Now that you know what a provider is and how to create them, it is time to let gatekeeper know about them so you can use them in your routes."}),"\n",(0,i.jsxs)(r.p,{children:["To register a provider just call ",(0,i.jsx)(r.code,{children:"gatekeeper.registerProvider"})," and pass to it the Provider you want to register (you can also specify a custom name for your provider if you want. If not, Gatekeeper will use the provider's default name)."]}),"\n",(0,i.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",children:"import gatekeeper from '@sharifvelasquez/gatekeeper'\r\nimport GoogleProvider from '@sharifvelasquez/gatekeeper/providers/google';\r\n\r\ngatekeeper.registerProvider('myProviderName', new GoogleProvider({\r\n    clientId: 'Life is beautiful',\r\n    clientSecret: 'Like you!',\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.example.com/auth/google'\r\n}, function handler(access_token, profile) {\r\n    return profile;\r\n}));\n"})}),"\n",(0,i.jsxs)(r.p,{children:["We recommend you do this at the beginning of your Express application. You can easily do this by, for example, creating a file called ",(0,i.jsx)(r.code,{children:"gatekeeperConfig.js"}),", (or ",(0,i.jsx)(r.code,{children:"gatekeeperConfig.ts"})," if you are using typescript) registering your providers there, and then importing it inside your main application file. Here's an example:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",metastring:'title="gatekeeperConfig.js"',children:"import gatekeeper from '@sharifvelasquez/gatekeeper';\r\nimport GoogleProvider from '@sharifvelasquez/gatekeeper/providers/google';\r\nimport GithubProvider from '@sharifvelasquez/gatekeeper/providers/github';\r\n\r\ngatekeeper.registerProvider(new GoogleProvider({\r\n    clientId: '<YOUR CLIENT ID>',\r\n    clientSecret: '<YOUR CLIENT SECRET>'\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.example.com/auth/google'\r\n}, function handler(access_token, profile) => {\r\n    return profile;\r\n}));\r\n\r\ngatekeeper.registerProvider(new GithubProvider({\r\n    clientId: '<YOUR CLIENT ID>',\r\n    clientSecret: '<YOUR CLIENT SECRET>'\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.example.com/auth/github'\r\n}, function handler(access_token, profile) => {\r\n    return profile;\r\n}));\r\n\r\n/* Notice that we can use the prebuilt providers as many times as we want\r\nto create multiple providers that do different things! */\r\ngatekeeper.registerProvider('GithubSmileyFaceAdder', new GithubProvider({\r\n    clientId: '<YOUR CLIENT ID>',\r\n    clientSecret: '<YOUR CLIENT SECRET>'\r\n    // The OAuth2 callback/redirect url you registered\r\n    // (We recommend the URL in which this provider will be used)\r\n    callbackURL: 'https://www.myapp.com/auth/smiley/github'\r\n}, function handler(access_token, profile) => {\r\n    const smileyProfile = {\r\n        ...profile,\r\n        name: profile.name + ' :D'\r\n    };\r\n    return profile;\r\n}));\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-js",metastring:'title="app.js"',children:"import gatekeeper from '@sharifvelasquez/gatekeeper'\r\nimport express from 'express'\r\nimport session from 'express-session'\r\n\r\n// We import the file that contains our provider registrations\r\nimport './config/gatekeeperConfig'\n"})}),"\n",(0,i.jsx)(r.admonition,{type:"info",children:(0,i.jsx)(r.p,{children:"Note: You can go for a completely different approach, just make sure you register your providers before using them inside your routes"})}),"\n",(0,i.jsxs)(r.p,{children:["Now that we have registered our providers, we are ready to start using them! Go to the next section, ",(0,i.jsx)(r.a,{href:"./authenticating-users",children:"Authenticating Users"}),", to see how to use them in your routes."]})]})}function l(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>a});var i=t(6540);const n={},o=i.createContext(n);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);